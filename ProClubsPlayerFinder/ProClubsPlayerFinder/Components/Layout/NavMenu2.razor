@implements IDisposable

@inject NavigationManager NavigationManager

<div class="d-flex justify-content-between align-items-center text-light" style="height: 60px; background-color: limegreen">
    <div class="ms-4 text-3xl font-bold">EA FC 24 Clubs Player Finder</div>
        <nav class="d-flex gap-1 me-4 text-xl">
            <AuthorizeView>
                <Authorized>
                    <NavLink class="btn-lg font-semibold" href="home" Match="NavLinkMatch.All">Home</NavLink>
@*                     <NavLink class="btn-lg font-semibold" href="counter">Counter</NavLink>
                    <NavLink class="btn-lg font-semibold" href="weather">Weather</NavLink>
                    <NavLink class="btn-lg font-semibold" href="auth">Auth Required</NavLink> *@
                    <NavLink href="Account/Manage" class="btn-lg font-semibold">@context.User.Identity?.Name</NavLink>
                        <form action="Account/Logout" method="post">
                            <AntiforgeryToken />
                            <input type="hidden" name="ReturnUrl" value="@currentUrl" />
                            <button type="submit" class="btn-lg font-semibold">Logout</button>
                        </form>
                </Authorized>
                <NotAuthorized>
                    <NavLink href="Account/Register" class="btn-lg font-semibold">Register</NavLink>
                    <NavLink href="" class="btn-lg font-semibold">Login</NavLink>
                </NotAuthorized>
            </AuthorizeView>
        </nav>
</div> 


@code {
    private string? currentUrl;

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}
