@page "/users/login"

<div class="d-flex flex-row">
    <div class="col-lg-4 d-flex flex-column justify-content-center p-5" style="background-color: black">
        <h2 class="text-white mb-4">Sign in to your account</h2>

        <EditForm Model="LoginModel" OnValidSubmit="HandleLogin">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <div>
                <label for="email" class="text-white">Email Address</label>
                <InputText class="form-control" @bind-Value="LoginModel.Email" />
                <ValidationMessage For="@(() => LoginModel.Email)" />
            </div>
            <br />
            <div>
                <label for="password" class="text-white">Password</label>
                <InputText class="form-control" type="password" @bind-Value="LoginModel.Password" />
                <ValidationMessage For="@(() => LoginModel.Password)" />
            </div>
            <div class="mt-4 text-center">
                <button type="submit" class="btn btn-lg btn-success green-background btn-block text-black"> Login </button>
            </div>
        </EditForm>
    </div>
    <div class="col-lg-8 backgroundWallpaperCss"> </div>
</div>

@code {
    LoginUserDto LoginModel = new LoginUserDto();
    string message = string.Empty;

    private async Task HandleLogin()
    {
        try
        {
            var authResponse = await authService.LoginAsync(LoginModel);

            if (string.IsNullOrEmpty(authResponse.Token))
                navManager.NavigateTo("/users/login");
            else
            {
                LoginModel = new();
                await authStateProvider.UpdateAuthenticationState(authResponse.Token);
                navManager.NavigateTo("/");
            }

        }
        catch (ApiException apiExc)
        {
            if (apiExc.StatusCode >= 200 && apiExc.StatusCode < 300)
                NavigateToLogin();

            message = apiExc.ErrorMessage;
        }
    }

    private void NavigateToLogin()
    {
        navManager.NavigateTo("/users/login");
    }
}
