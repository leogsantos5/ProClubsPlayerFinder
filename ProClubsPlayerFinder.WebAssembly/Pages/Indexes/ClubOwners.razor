<style>
    .btn-warning:hover {
        background-color: #ff9800; /* Change the background color on hover */
        border-color: #e65100; /* Change the border color on hover */
    }

    .btn-danger:hover {
        background-color: #d32f2f; /* Change the background color on hover */
        border-color: #b71c1c; /* Change the border color on hover */
    }
</style>

<div class="text-center">
    <NavLink type="submit" class="btn btn-lg btn-success green-background btn-block text-black" href="/searchFreeAgents/empty"> Search for Free Agents </NavLink>
</div>
<div class="mt-4 text-center">
    <NavLink type="submit" class="btn btn-lg btn-success green-background btn-block text-black" @onclick="NavigateToUpdateClub"> Edit Club Info </NavLink>
</div>
@* <div class="mt-4 text-center">
    <NavLink type="submit" class="btn btn-lg btn-success green-background btn-block text-black"> Club Group Chat </NavLink>
</div> *@
<div class="mt-4 text-center">
    <NavLink type="submit" class="btn btn-lg btn-success green-background btn-block text-black"> View Players </NavLink>
</div>
<div class="mt-4 text-center">
    <NavLink type="submit" class="btn btn-lg btn-success green-background btn-block text-black" href="updatePlayer"> Edit your profile </NavLink>
</div>
<div class="mt-4 text-center">
    <NavLink type="submit" class="btn btn-lg btn-warning btn-block text-black" href="/removeClubPlayers"> Remove Players </NavLink>
</div>
<div class="mt-4 text-center">
    <NavLink type="submit" class="btn btn-lg btn-danger btn-block text-black" @onclick="HandleDeleteClub"> Delete Club </NavLink>
</div>

@code {
    private string AuthenticatedUserId = "";

    protected override async Task OnInitializedAsync()
    {
        AuthenticatedUserId = await authStateProvider.GetUserIdFromToken();
    }

    private async Task HandleDeleteClub()
    {
        try
        {
            var deleteConfirm = await sweetAlertService.ConfirmAsync(new ConfirmArgs(title: "Delete club?",
                text: "Are you sure to delete your club? All players will be Free Agents.", icon: Icon.Warning,
                abortText: "No", confirmText: "Yes", dangerMode: true));
            if (deleteConfirm)
            {
                var stringToken = await localStorageService.GetItemAsStringAsync("token");
                if (stringToken != null)
                {
                    httpClient.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("bearer", stringToken);

                    string tokenValidOrNot = await authStateProvider.CheckTokenExpiration(stringToken);
                    if (tokenValidOrNot == Constants.TokenIsValidMessage)
                    {
                        var httpResponse = await httpClient.DeleteAsync("api/Clubs/DeleteClub/" + AuthenticatedUserId);
                        if (httpResponse.IsSuccessStatusCode)
                        {
                            await authStateProvider.UpdateNewAuthStateWithChangedRole(stringToken!, "Free Agent");
                            navManager.NavigateTo("/");
                        }
                    }
                }
            }
        }
        catch (ApiException) 
        {
            await js.InvokeVoidAsync("alert", "Something went wrong, try again later");
        }
    }

    private async Task NavigateToUpdateClub()
    {
        var stringToken = await localStorageService.GetItemAsStringAsync("token");
        if (stringToken != null)
        {
            httpClient.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("bearer", stringToken);

            string tokenValidOrNot = await authStateProvider.CheckTokenExpiration(stringToken);
            if (tokenValidOrNot == Constants.TokenIsValidMessage)
            {
                var httpResponse = await httpClient.GetAsync($"api/Clubs/GetClubId/{AuthenticatedUserId}");
                if (httpResponse.IsSuccessStatusCode)
                {
                    var clubIdFromClubOwnerId = await httpResponse.Content.ReadFromJsonAsync<int>();
                    navManager.NavigateTo("/updateClub/" + clubIdFromClubOwnerId);
                }
            }
        }
    }
}
